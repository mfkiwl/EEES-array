s-run-sim - ES-SIMD simulation driver
=====================================

SYNOPSIS
--------

:program:`s-run-sim` [*options*] filename

DESCRIPTION
-----------

The :program:`s-run-sim` command simulates the cycle-level behaviour for a specified
architecture with the binary archive generated by :program:`s-cc`.

The choice of architecture is determined by the :option:`-arch` option or the
:option:`-arch-cfg`.

OPTIONS
-------

The input file is a zip archive (``.zip``) generated by :program:`s-cc`.

The :program:`s-run-sim` is a driver program. And it depend on :program:`s-sim` to
function properly. The following path should be set:

 *SOLVER_PATH*

 Path to the ES-SIMD toolchain tools. In particular, :program:`s-sim`. It can be set by
 environment variable or by :option:`--solver-path` option.

If the :option:`--sim-dir` option is omitted, then :program:`s-run-sim` will send its
output to ``sim-out`` folder in the current working directory.

Other :program:`s-run-sim` options are described below.

End-user Options
~~~~~~~~~~~~~~~~

.. option:: -h, --help

 Show the help message and exit.

.. option:: -v, --verbose

 Run in verbose mode.

.. option::  --quiet

 Suppress all output.

.. option:: --keep

 Keep temporary files generated during the simulation

Tool Options
~~~~~~~~~~~~

.. option:: --solver-path=SOLVER_PATH

 Specify path to ES-SIMD toolchain (default=$SOLVER_PATH).

.. option:: --sim-opt=SIM_OPTS

 Specify extra options to :program:`s-sim`.

Simulation Options
~~~~~~~~~~~~~~~~~~

.. option:: --max-cycle=MAX_CYCLE

 Maximum simulation cycles.

.. option:: --full-trace

 Collect trace in full detail

.. option:: --sim-stat

 Keep simulation statistics.

.. option:: --dump-dmem

 Dump data memory content.

.. option:: --dump-dmem-prefix=DDUMP_PREFIX

 Prefix of data memory dump files.

.. option:: --sim-dir=SIM_DIR

 Simulation directory.

Target Options
~~~~~~~~~~~~~~

.. option:: --arch=<arch>

 Specify the architecture for which to generate assembly. If no architecture
 configuration file is specified by :option:`-arch-cfg`, the default target
 architecture is "baseline", which is a baseline 32-bit processor with 4 PE
 and explicit bypassing in both CP and PE.

 If the architecture is different from the one specified by the configuration
 file, this option is ignored.

.. option:: --arch-cfg=<arch.json>

 Specify an architecture configuration file in JSON format.

.. option:: --arch-param=<params>
 
 Set specific architecture architecture parameters. A paramter is specified
 with a key:value pair. Multiple parameters are separated by comma.

 For example, the following command sets the number of PE to 128 and the
 number of data memory entries to 2048:

.. code-block:: none

   s-run-sim --arch=baseline --arch-param pe:128,dmem-depth:2048

EXIT STATUS
-----------

If :program:`s-run-sim` succeeds, it will exit with 0.  Otherwise, if an error
occurs, it will exit with a non-zero value.

SEE ALSO
--------

s-sim

